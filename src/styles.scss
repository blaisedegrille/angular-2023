// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
/* @use '@angular/material' as mat;
 */ // Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
/* @include mat.core();
 */
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
/* $angular-2023-primary: mat.define-palette(mat.$indigo-palette);
$angular-2023-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
 */
// The warn palette is optional (defaults to red).
/* $angular-2023-warn: mat.define-palette(mat.$red-palette);
 */
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
/* $angular-2023-theme: mat.define-light-theme((
  color: (
    primary: $angular-2023-primary,
    accent: $angular-2023-accent,
    warn: $angular-2023-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
)); */

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($angular-2023-theme);

/* You can add global styles to this file, and also import other style files */
@use "@angular/material" as mat;
@use "@angular/material-experimental" as matx;

@import "../node_modules/@swimlane/ngx-datatable/themes/material.scss";
@import "./styles/theme_variables";

@include mat.core();
// @include matx.core();

/*
$my-primary: mat.define-palette(mat.$purple-palette, 500);
$my-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
*/

$my-primary-purple: mat.define-palette(mat.$purple-palette, 500);
$my-primary-green: mat.define-palette(mat.$green-palette, 500);
$my-accent-purple: mat.define-palette(mat.$purple-palette, A200, A100, A400);
$my-accent-green: mat.define-palette(mat.$green-palette, A200, A100, A400);

$my-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-primary-purple,
      accent: $my-accent-green,
    ),
    density: 0,
  )
);

$my-mat3-light-theme: matx.define-theme(
  (
    color: (
      theme-type: light,
      primary: matx.$m3-violet-palette,
    ),
    typography: (
      brand-family: "Comic Sans",
      bold-weight: 900,
    ),
    density: (
      scale: -1,
    ),
  )
);

$my-mat3-dark-theme: matx.define-theme(
  (
    color: (
      theme-type: dark,
      primary: matx.$m3-violet-palette,
    ),
    typography: (
      brand-family: "Comic Sans",
      bold-weight: 900,
    ),
    density: (
      scale: -1,
    ),
  )
);

$my-light-button-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-accent-green,
      accent: $my-primary-purple,
    ),
    density: 0,
  )
);

$my-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $my-primary-purple,
      accent: $my-accent-green,
    ),
    density: 0,
  )
);

$my-dark-button-theme: mat.define-dark-theme(
  (
    color: (
      primary: $my-accent-green,
      accent: $my-primary-purple,
    ),
    density: 0,
  )
);

// Emit theme-dependent styles for common features used across multiple components.
// @include mat.all-component-themes($my-theme);
//@include mat.core-theme($my-theme);
//@include mat.button-theme($my-theme);

body.dark {
  @include darken();
  background: linear-gradient(to bottom, #9c27b0 10%, #303030 60%);
}
body.light {
  @include lighten();
  background: linear-gradient(to bottom, #ffffff 0%, #9c27b0 100%);
}
/*
@media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.all-component-themes($my-light-theme);
}

@media (prefers-color-scheme: dark) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.all-component-themes($my-dark-theme);
} */

html,
body {
  height: 100%;

  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

/* .container {
  padding: 30px;
}
 */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
